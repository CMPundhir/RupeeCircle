# Generated by Django 4.2.1 on 2023-06-27 11:45

import apps.mauth.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, null=True)),
                ('selfie', models.ImageField(blank=True, null=True, upload_to=apps.mauth.models.upload_selfie)),
                ('is_tnc_accepted', models.BooleanField(default=False)),
                ('mobile', models.CharField(null=True, unique=True)),
                ('is_mobile_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHERS', 'OTHERS')], null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('pan', models.CharField(blank=True, null=True, unique=True)),
                ('pan_name', models.CharField(blank=True, null=True)),
                ('is_pan_verified', models.BooleanField(default=False)),
                ('aadhaar', models.CharField(blank=True, null=True, unique=True)),
                ('aadhaar_name', models.CharField(blank=True, null=True)),
                ('is_aadhaar_verified', models.BooleanField(default=False)),
                ('acc_holder_name', models.CharField(blank=True, null=True)),
                ('bank_acc', models.CharField(blank=True, null=True, unique=True)),
                ('bank_ifsc', models.CharField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, null=True)),
                ('is_bank_acc_verified', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('MOBILE_VERIFICATION', 'MOBILE_VERIFICATION'), ('PAN_VERIFICATION', 'PAN_VERIFICATION'), ('AADHAAR_VERIFICATION', 'AADHAAR_VERIFICATION'), ('BANK_VERIFICATION', 'BANK_VERIFICATION'), ('ACTIVE', 'ACTIVE')], default='MOBILE_VERIFICATION')),
                ('role', models.CharField(choices=[('INVESTOR', 'INVESTOR'), ('PARTNER', 'PARTNER'), ('BORROWER', 'BORROWER'), ('ADMIN', 'ADMIN')], default='INVESTOR')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('partner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RiskLog',
            fields=[
                ('is_record_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Indicates the time when the record was created', null=True, verbose_name='Published On')),
                ('last_modified_at', models.DateTimeField(auto_now_add=True, help_text='Indicates the time when the record was last modified', null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('updated_risk', models.CharField(choices=[('LOW', 'LOW'), ('MODERATE', 'MODERATE'), ('HIGH', 'HIGH')], default='LOW', max_length=255)),
                ('comment', models.CharField(max_length=1000)),
                ('created_by', models.ForeignKey(blank=True, help_text='Indicates the user who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, help_text='Indicates the user who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
