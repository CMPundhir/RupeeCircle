name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
        # python-version: [3.7, 3.8, 3.9]

    steps:
    # - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

    - name: Set up AWS credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        echo "[default]"
        echo "aws_access_key_id = $AWS_ACCESS_KEY_ID"
        echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY"
    
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*'

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: RupeeCircle
        environment_name: RupeeCircle-dev
        version_label: 12345
        region: ap-south-1
        deployment_package: deploy.zip

    # - name: Django aws eb deployment
    #   uses: joel-hanson/django-aws-eb-deploy@V1.1
    #   with:
    #     python_version: ${{ matrix.python_version }}
    #     flake8: true
    #     aws_access_key_id: ${{ secrets.aws_access_key_id }}
    #     aws_secret_access_key: ${{ secrets.aws_secret_access_key }}
    #     django_path: sample_project
    #     unit_testing: true
    #     deploy: true
    #     min_coverage: 10
    #     postgresql_required: true
    #     security_check: true
    #     flake8_config_file: ".flake8"

    # - name: Coverage report artifacts
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: coverage report
    #     path: output/coverage_report.txt

    # - name: Coverage report artifacts if failed
    #   uses: actions/upload-artifact@v1
    #   if: failure()
    #   with:
    #     name: coverage report if failed
    #     path: output/coverage_report.txt

    # - name: Security check report artifacts
    #   uses: actions/upload-artifact@v1
    #   if: failure()
    #   with:
    #     name: bandit
    #     path: output/security_report.txt
